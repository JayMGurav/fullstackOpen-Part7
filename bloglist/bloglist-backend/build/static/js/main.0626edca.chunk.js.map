{"version":3,"sources":["services/blogs.js","services/login.js","reducers/notificationReducer.js","reducers/loginReducer.js","services/users.js","reducers/usersReducer.js","reducers/blogsReducer.js","customHooks/useFeild.js","components/Blog.js","components/Togglable.js","components/BlogForm.js","components/Blogs.js","components/Header.js","components/User.js","components/Users.js","components/LoggedInSection.js","components/LoginForm.js","components/Notification.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","getBlog","id","create","newObject","config","headers","Authorization","post","comment","update","put","setToken","newToken","remove","delete","login","credential","createNotification","message","type","timeToLive","dispatch","timeoutId","clearTimeout","setTimeout","notificationReducer","state","action","loginReducer","loggedIn","user","JSON","parse","window","localStorage","getItem","blogService","removeItem","getAllUsers","getUser","usersReducer","blogsReducer","filter","b","sort","likes","useField","name","useState","value","setValue","onChange","event","target","reset","mapDispatchToProps","removeBlog","title","blogsService","errMessage","error","likeBlog","updatedBlog","commentBlog","console","log","comments","connectedBlog","connect","props","useFeild","blog","className","author","url","Button","onClick","variant","style","marginTop","handleClick","length","map","c","key","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","createBlog","createdBlog","connectedBlogForm","blogFormRef","onSubmit","preventDefault","Blogs","useRef","ListGroup","blogs","to","Item","logoutUser","connectedHeader","Navbar","bg","Brand","href","Toggle","Nav","Collapse","Text","username","User","as","active","Users","Table","responsive","bordered","users","initializeUsers","usersService","initializeBlogs","connectedLoggedInSection","useEffect","itemById","items","find","blogMatch","useRouteMatch","path","blogById","params","userMatch","userById","blogsAsProps","usersAsProps","Jumbotron","fluid","Container","loginUser","password","loginService","setItem","stringify","connectedLoginForm","handleLogin","connectedNotification","notification","checkUserLoginStatus","connectedApp","reducer","combineReducers","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0626edca.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getBlog = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst comment = async (id, comment) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(`${baseUrl}/${id}/comments`, comment, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, getBlog, create, update, setToken, remove, comment }","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/login'\n\nconst login = async (credential) => {\n  const response = await axios.post(baseUrl, credential)\n  return response.data\n}\n\n\nexport default { login }","export const createNotification = (message, type, timeToLive) => {\n  return async dispatch => {\n    let timeoutId = null\n    if (timeoutId) clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => {\n      dispatch({\n        type: 'RESET_NOTIFICATION'\n      })\n    }, timeToLive * 1000)\n\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: {\n        message,\n        type\n      }\n    })\n  }\n}\n\nconst notificationReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION': return action.data\n    case 'RESET_NOTIFICATION': return {}\n\n    default: return state\n  }\n}\n\nexport default notificationReducer","import blogService from '../services/blogs'\nimport loginService from '../services/login'\nimport { createNotification } from './notificationReducer'\n\nexport const loginUser = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedBloglistappUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      dispatch({\n        type: 'LOGIN_USER',\n        data: user\n      })\n    }\n    catch (error) {\n      let errMessage = error?.response?.data?.error || error.message\n      dispatch(createNotification(errMessage, 'error', 5));\n    }\n  }\n}\n\nexport const checkUserLoginStatus = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: 'IS_LOGGED_IN'\n      })\n    }\n    catch (error) {\n      let errMessage = error?.response?.data?.error || error.message\n      dispatch(createNotification(errMessage, 'error', 5));\n    }\n  }\n}\n\nexport const logoutUser = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: 'LOGOUT_USER'\n      })\n    }\n    catch (error) {\n      let errMessage = error?.response?.data?.error || error.message\n      dispatch(createNotification(errMessage, 'error', 5));\n    }\n  }\n}\n\nconst loginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'LOGIN_USER': return { ...action.data, loggedIn: true }\n    case 'IS_LOGGED_IN': {\n      const user = JSON.parse(window.localStorage.getItem('loggedBloglistappUser'))\n      if (user) blogService.setToken(user.token)\n      return user ? { ...user, loggedIn: true } : { loggedIn: false }\n    }\n    case 'LOGOUT_USER':\n      window.localStorage.removeItem('loggedBloglistappUser')\n      return { loggedIn: false }\n\n    default: return state\n  }\n}\n\nexport default loginReducer","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/users'\r\n\r\nconst getAllUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getUser = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\n// const create = async newObject => {\r\n//   const config = {\r\n//     headers: { Authorization: token },\r\n//   }\r\n//   const response = await axios.post(baseUrl, newObject, config)\r\n//   return response.data\r\n// }\r\n\r\nexport default { getAllUsers, getUser }","import usersService from '../services/users'\r\nimport { createNotification } from './notificationReducer'\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    // get all the users and dispatch\r\n    try {\r\n      const users = await usersService.getAllUsers()\r\n      dispatch({\r\n        type: 'INIT_USERS',\r\n        data: users\r\n      })\r\n    } catch (error) {\r\n      let errMessage = error?.response?.data?.error || error.message\r\n      dispatch(createNotification(errMessage, 'error', 5));\r\n    }\r\n  }\r\n}\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INIT_USERS': return [...action.data]\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default usersReducer","import blogsService from '../services/blogs'\nimport { createNotification } from './notificationReducer'\n\nexport const createBlog = (title, author, url) => {\n  return async dispatch => {\n    try {\n      const createdBlog = await blogsService.create({ title, author, url })\n      dispatch({\n        type: 'NEW_BLOG',\n        data: { ...createdBlog }\n      })\n      dispatch(createNotification(`Added \"${createdBlog.title}\" to the list`, 'success', 5))\n    } catch (error) {\n      let errMessage = error?.response?.data?.error || error.message\n      dispatch(createNotification(errMessage, 'error', 5));\n    }\n\n  }\n}\n\nexport const removeBlog = (id, title) => {\n  return async dispatch => {\n    try {\n      await blogsService.remove(id);\n      dispatch({\n        type: 'REMOVE_BLOG',\n        data: { id }\n      })\n      dispatch(createNotification(`Removed \"${title}\" from the list`, 'success', 5))\n    } catch (error) {\n      let errMessage = error?.response?.data?.error || error.message\n      dispatch(createNotification(errMessage, 'error', 5));\n    }\n  }\n}\n\nexport const likeBlog = (id, updatedBlog) => {\n  return async dispatch => {\n    try {\n      await blogsService.update(id, updatedBlog)\n      dispatch({\n        type: 'LIKE_BLOG',\n        data: { ...updatedBlog }\n      })\n      dispatch(createNotification(`Liked \"${updatedBlog.title}\"`, 'success', 5))\n    } catch (error) {\n      let errMessage = error?.response?.data?.error || error.message\n      dispatch(createNotification(errMessage, 'error', 5));\n    }\n  }\n}\n\nexport const commentBlog = (id, comment) => {\n  return async dispatch => {\n    try {\n      const updatedBlog = await blogsService.comment(id, comment)\n      console.log(updatedBlog)\n      dispatch({\n        type: 'COMMENT_BLOG',\n        data: { ...updatedBlog, comments: [...updatedBlog.comments] }\n      })\n      dispatch(createNotification(`You commented \"${comment.comment}\"`, 'success', 5))\n    } catch (error) {\n      let errMessage = error?.response?.data?.error || error.message\n      dispatch(createNotification(errMessage, 'error', 5));\n    }\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    // get all the blogs and dispatch\n    const blogs = await blogsService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\n\n// export const getSingleBlog = (id) => {\n//   return async dispatch => {\n//     // get all the blogs and dispatch\n//     // const blog = await blogsService.getBlog(id)\n//     dispatch({\n//       type: 'GET_BLOG',\n//       data: { id }\n//     })\n//   }\n// }\n\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS': return [...action.data]\n    case 'NEW_BLOG': return [...state, { ...action.data }]\n    case 'COMMENT_BLOG': return [...state.filter(b => b.id !== action.data.id), { ...action.data }]\n    case 'LIKE_BLOG':\n      return [...state.filter(b => b.id !== action.data.id), { ...action.data }].sort((a, b) => b.likes - a.likes)\n    case 'REMOVE_BLOG': return [...state.filter(b => b.id !== action.data.id)]\n    default: return state\n  }\n}\n\nexport default blogsReducer","import { useState } from 'react';\r\n\r\nconst useField = (type, name) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    id: name,\r\n    name,\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useField;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { removeBlog, likeBlog, commentBlog } from '../reducers/blogsReducer'\r\nimport useFeild from '../customHooks/useFeild'\r\n\r\nconst Blog = (props) => {\r\n  const comment = useFeild('text', 'comment')\r\n\r\n  const handleClick = (id, comment) => {\r\n    props.commentBlog(id, comment)\r\n  }\r\n\r\n  const blog = props.blog\r\n  return (\r\n    <div className=\"blog\">\r\n      <h2>{blog?.title} -{blog?.author}</h2>\r\n      <div className=\"blogDetails\">\r\n        <p>{blog?.url}</p>\r\n        <p>Likes : {blog?.likes} <Button className=\"like_btn\" onClick={() => props.likeBlog(blog?.id, { ...blog, likes: blog?.likes + 1 })}>like</Button></p>\r\n        {blog?.user ? <p>added by : {blog?.user.name}</p> : null}\r\n        <Button variant=\"danger\" onClick={() => props.removeBlog(blog?.id, blog?.title)}>remove</Button>\r\n      </div>\r\n      <div style={{ marginTop: 20 }}>\r\n        comment :\r\n          <input {...comment} reset=\"\" />\r\n        <button onClick={() => handleClick(blog?.id, { comment: comment.value })}>comment</button>\r\n      </div>\r\n      {blog?.comments?.length ? (\r\n        <ul>\r\n          {blog?.comments.map(c => (\r\n            <li key={c}>{c}</li>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  removeBlog,\r\n  likeBlog,\r\n  commentBlog\r\n}\r\n\r\nconst connectedBlog = connect(null, mapDispatchToProps)(Blog)\r\nexport default connectedBlog","import React, { useState, useImperativeHandle } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <Button onClick={toggleVisibility}>cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createBlog } from '../reducers/blogsReducer'\r\nimport useFeild from '../customHooks/useFeild'\r\nimport Toggleable from './Togglable'\r\n\r\n\r\nconst BlogForm = ({ blogFormRef, createBlog }) => {\r\n  const title = useFeild('text', 'title')\r\n  const author = useFeild('text', 'author')\r\n  const url = useFeild('text', 'url')\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    title.reset()\r\n    author.reset()\r\n    url.reset()\r\n    createBlog(title.value, author.value, url.value)\r\n  }\r\n\r\n  return (\r\n    <Toggleable buttonLabel=\"add new blog\" ref={blogFormRef}>\r\n      <h2>Add new blog to the list</h2>\r\n      <form onSubmit={handleSubmit} className=\"formDiv\">\r\n        <div>\r\n          Title :\r\n          <input {...title} reset=\"\" />\r\n        </div>\r\n        <div>\r\n          Author :\r\n          <input {...author} reset=\"\" />\r\n        </div>\r\n        <div>\r\n          Url :\r\n          <input {...url} reset=\"\" />\r\n        </div>\r\n        <button type=\"submit\" id=\"add_to_bloglist\">Add</button>\r\n      </form>\r\n    </Toggleable>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createBlog\r\n}\r\n\r\nconst connectedBlogForm = connect(null, mapDispatchToProps)(BlogForm)\r\nexport default connectedBlogForm\r\n","import React, { useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nimport BlogForm from './BlogForm'\r\n\r\nconst Blogs = (props) => {\r\n  const blogFormRef = useRef()\r\n\r\n\r\n  return (\r\n    <ListGroup >\r\n      <BlogForm blogFormRef={blogFormRef} />\r\n      <br />\r\n      {props.blogs.map(({ id, title }) =>\r\n        <Link to={`/blogs/${id}`} key={id}><ListGroup.Item >{title}</ListGroup.Item></Link>\r\n      )}\r\n    </ListGroup>\r\n\r\n  )\r\n}\r\n\r\nexport default Blogs","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Button } from 'react-bootstrap';\r\n\r\nimport { logoutUser } from '../reducers/loginReducer'\r\n\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Navbar variant=\"light\" bg=\"light\">\r\n      <Navbar.Brand href=\"/\">Blog list</Navbar.Brand>\r\n      <Navbar.Toggle />\r\n      <Nav className=\"mr-auto\">\r\n        <Link className=\"mr-2\" to=\"/\">Home</Link>\r\n        <Link className=\"mr-2\" to=\"/blogs\">blogs</Link>\r\n        <Link className=\"mr-2\" to=\"/users\">users</Link>\r\n      </Nav>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Navbar.Text>\r\n          Signed in as: <strong>{props.user.name}(@{props.user.username})</strong>\r\n          <Button variant=\"outline-dark\" onClick={props.logoutUser}>Logout</Button>\r\n        </Navbar.Text>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => {\r\n  return {\r\n    user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logoutUser\r\n}\r\n\r\n\r\nconst connectedHeader = connect(mapStateToProps, mapDispatchToProps)(Header)\r\nexport default connectedHeader","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst User = (props) => {\r\n  return (\r\n    <>\r\n      <h2>{props?.user?.name}(@{props?.user?.username})</h2>\r\n      <br />\r\n      <ListGroup as=\"ul\">\r\n        <ListGroup.Item as=\"li\" active>\r\n          Added blogs\r\n        </ListGroup.Item>\r\n        {props?.user?.blogs.map(({ title, id }) => (\r\n          <Link to={`/blogs/${id}`}><ListGroup.Item as=\"li\" key={'added' + id}>{title}</ListGroup.Item></Link>\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst Users = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table responsive bordered={false}>\r\n        <thead>\r\n          <tr>\r\n            <th>user name</th>\r\n            <th>blogs created</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.users.map(({ length, id, name }) => (\r\n            <tr key={id}>\r\n              <td><Link to={`/users/${id}`}>{name} </Link></td>\r\n              <td>{length}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div >\r\n  )\r\n}\r\n\r\n\r\nexport default Users","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\r\nimport { Container, Jumbotron } from 'react-bootstrap';\r\n\r\n\r\nimport { initializeUsers } from '../reducers/usersReducer'\r\nimport { initializeBlogs } from '../reducers/blogsReducer'\r\nimport Blog from './Blog'\r\nimport Blogs from './Blogs'\r\nimport Header from './Header'\r\nimport User from './User'\r\nimport Users from './Users'\r\n\r\n\r\nconst LoggedInSection = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.initializeBlogs()\r\n    props.initializeUsers()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const itemById = (id, items) =>\r\n    props[items].find(a => a.id === id)\r\n\r\n  const blogMatch = useRouteMatch({\r\n    path: '/blogs/:id'\r\n  })\r\n  const blogById = blogMatch\r\n    ? itemById(blogMatch.params.id, 'blogs')\r\n    : null\r\n\r\n  const userMatch = useRouteMatch({\r\n    path: '/users/:id'\r\n  })\r\n  const userById = userMatch\r\n    ? itemById(userMatch.params.id, 'users')\r\n    : null\r\n  const blogsAsProps = props.blogs.map(({ id, title }) => ({ id, title }));\r\n  const usersAsProps = props.users.map(({ id, name, blogs: { length } }) => ({ id, name, length }));\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Jumbotron fluid>\r\n        <Container>\r\n          <h1>Blog App</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <Switch>\r\n          <Route path=\"/blogs/:id\">\r\n            <Blog blog={blogById} />\r\n          </Route>\r\n          <Route path=\"/blogs\">\r\n            <Blogs blogs={blogsAsProps} />\r\n          </Route>\r\n          <Route path=\"/users/:id\" >\r\n            <User user={userById} />\r\n          </Route>\r\n          <Route path=\"/users\" >\r\n            <Users users={usersAsProps} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Blogs blogs={blogsAsProps} />\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n      {/* <Footer/> */}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ users, blogs }) => {\r\n  return {\r\n    users,\r\n    blogs\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  initializeUsers,\r\n  initializeBlogs\r\n}\r\n\r\nconst connectedLoggedInSection = connect(mapStateToProps, mapDispatchToProps)(LoggedInSection)\r\nexport default connectedLoggedInSection;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport useField from '../customHooks/useFeild'\r\nimport { loginUser } from '../reducers/loginReducer'\r\n\r\nconst LoginForm = (props) => {\r\n  const username = useField('text', 'username')\r\n  const password = useField('password', 'password')\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    console.log({ username: username.value, password: password.value })\r\n    props.loginUser(username.value, password.value)\r\n    username.reset()\r\n    password.reset()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Login to Bloglist</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username :\r\n          <input {...username} reset=\"\" />\r\n        </div>\r\n        <div>\r\n          password :\r\n          <input {...password} reset=\"\" />\r\n        </div>\r\n        <button type=\"submit\" id=\"login-button\">login</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loginUser\r\n}\r\n\r\nconst connectedLoginForm = connect(null, mapDispatchToProps)(LoginForm)\r\nexport default connectedLoginForm","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification.message && !notification.type) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className={notification.type}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ notification }) => {\r\n  return { notification }\r\n}\r\n\r\n\r\nconst connectedNotification = connect(mapStateToProps, null)(Notification)\r\nexport default connectedNotification","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Container } from 'react-bootstrap';\n\nimport { checkUserLoginStatus } from './reducers/loginReducer'\n\nimport LoggedInSection from './components/LoggedInSection'\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\n\n\nconst App = (props) => {\n  useEffect(() => {\n    props.checkUserLoginStatus()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Container fluid>\n      <Notification />\n      {props.loggedIn ? <LoggedInSection /> : <LoginForm />}\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({ user: { loggedIn } }) => {\n  return { loggedIn }\n}\n\nconst mapDispatchToProps = {\n  checkUserLoginStatus,\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App)\nexport default connectedApp","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport blogsReducer from './reducers/blogsReducer'\nimport notificationReducer from './reducers/notificationReducer'\n// import filterReducer from './reducers/filterReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userReducer from './reducers/usersReducer'\n\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  notification: notificationReducer,\n  user: loginReducer,\n  users: userReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\n\nexport default store\n\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './App.css'\nimport App from './App'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n  , document.getElementById('root'))"],"sourceRoot":""}